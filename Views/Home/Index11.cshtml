@{
    ViewData["Title"] = "Home Page";
}

<!-- Client side libs required  -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.1.1/min/dropzone.min.css" crossorigin="anonymous">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/blueimp-gallery/2.25.2/css/blueimp-gallery.min.css" crossorigin="anonymous">

<style>
    html {
        font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
    }

    main {
        margin: 20px;
    }

    #gallery-note {
        font-size: smaller
    }

    .blueimp-gallery {
        margin: 25px;
        max-width: 150px;
        padding-bottom: 150px;
    }

    .dropzone {
        border: 3px dashed #00a1f1;
        background: #F0F8FF;
        margin: 25px;
        border-radius: 5px;
        max-width: 400px;
    }

    .dropzone .dz-message {
        font-weight: 350;
    }

    .dropzone .dz-message .note {
        font-family: sans-serif;
        font-size: 18px;
        font-weight: 200;
        display: block;
        margin-top: 1.5rem;
    }
</style>


<main>
    <div class="box header">
        <h1><span class="fa fa-user-circle-o"></span> <span id="page-title">Deposit documents</span></h1>
    </div>
    
    <div class="box content">
        <hr>
        <div>
            <h2>Upload document</h2>

            <form action="/api/deposit/attachdocument"
                  class="dropzone needsclick dz-clickable"
                  id="uploadForm"
                  method="post"
                  enctype="multipart/form">

                <div>
                    User ID:
                    <input type="text" data-val="true"
                           data-val-required="The User Id is required."
                           id="userId" name="userId" value="userid" />
                </div>
                 <div >
                  <div class="dz-message needsclick">
                    <span class="note needsclick">
                        Drop files here or click to upload.
                    </span>
                  </div>
                 </div>
            </form>
        </div>
        

        <h2>View documents</h2>        
        <input type="button" value="fetch documents" onclick="fetchDocuments()"/>
        
            <div id="stored-images"></div>
            <!-- The Gallery as inline carousel, can be positioned anywhere on the page -->
            <div id="blueimp-gallery-carousel" class="blueimp-gallery blueimp-gallery-carousel">
                <div class="slides"></div>
                <h3 class="title"></h3>
                <a class="prev">‹</a>
                <a class="next">›</a>
                <a class="play-pause"></a>
                <ol class="indicator"></ol>
            </div>
        </div>
</main>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.1.1/min/dropzone.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/blueimp-gallery/2.25.2/js/blueimp-gallery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js"></script>

<script>
    // init gallery for later use
    var gallery;

    // Grab links for images from backend api
    function fetchDocuments() {
        // Fetch images
        var userId = $('#userId').val();
        console.info(userId);
        $.get("api/deposit/viewdocuments?userId=" + userId, function (links) {

            //console.log('fetched document links:' + links);

            if ( _.isEmpty(links)) {
                console.log('empty fetched');
                return;
            } else {
                if ( _.isEmpty(gallery) ) {
                    // initialize gallery
                    gallery = blueimp.Gallery(links, {container: '#blueimp-gallery-carousel',carousel: true});                    
                } else {
                    // check if images are equal to array
                    //console.log(gallery.list);


                    var imageLinksEqual = _.isEqual(
                        _.sortBy(gallery.list.map(s => s.split("?")[0])),
                        _.sortBy(fetchedImageLinks.map(s => s.split("?")[0])));

                    //var imageLinksEqual = _.isEqual(
                    //    _.sortBy(gallery.list.map(s => s.split("?")[0])),
                    //    _.sortBy(links.map(s => s.split("?")[0])));

                    if (imageLinksEqual ) {
                        // do nothing
                    }
                    else {
                        // update gallery with new image urls. Only compare actual url without SAS token query string
                        var newImageLinks = _.difference(links.map(s => s.split("?")[0]),
                            gallery.list.map(s => s.split("?")[0]));
                        // Only add new images
                        gallery.add(newImageLinks);

                        // Force image load
                        gallery.next();
                    }
                }       
            }     
        });
    }

    /* Dropzone */   
    // "imageUpload" is the camelized version of the HTML element's ID
    Dropzone.options.imageUpload = {
        paramName: "files", // The name that will be used to transfer the file
        dictDefaultMessage: "Drop files here or Click to Upload",
        addRemoveLinks: true, // Allows for cancellation of file upload and remove thumbnail
        init: function() {
            myDropzone = this;
            myDropzone.on("success", function(file, response) {
                fetchDocuments();
                myDropzone.removeFile(file);                
            });                    
        }
    };
</script>
